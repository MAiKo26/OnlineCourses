{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component, Input } from '@angular/core';\nexport let AppComponent = class AppComponent {\n  //method start\n  constructor() {\n    this.title = 'todomvc';\n    this.allItems = [];\n    //method end\n    this.newTodoText = '';\n    this.editingTodoTitle = '';\n    this.filter = 'all';\n    const savedTodos = JSON.parse(localStorage.getItem('todoList') || '[]');\n    this.allItems = savedTodos.map(todo => {\n      return {\n        id: todo.id,\n        title: todo.title,\n        completed: todo.completed,\n        editing: todo.editing\n      };\n    });\n  }\n  get items() {\n    if (this.filter === 'all') {\n      return this.allItems;\n    }\n    return this.allItems.filter(item => this.filter === 'completed' ? item.completed : !item.completed);\n  }\n  get remaining() {\n    return this.allItems.filter(todo => !todo.completed).length;\n  }\n  toggleCompletion(todo) {\n    todo.completed = !todo.completed;\n    this.updateStore();\n  }\n  toggleAll() {\n    this.allItems.forEach(todo => todo.completed = !todo.completed);\n    this.updateStore();\n  }\n  get completed() {\n    return this.allItems.filter(todo => todo.completed);\n  }\n  removeCompleted() {\n    this.allItems = this.allItems.filter(todo => !todo.completed);\n    this.updateStore();\n  }\n  addTodo() {\n    if (this.newTodoText.trim().length) {\n      this.allItems.push({\n        id: Date.now(),\n        title: this.newTodoText,\n        completed: false,\n        editing: false\n      });\n      this.newTodoText = '';\n    }\n    this.updateStore();\n  }\n  removeTodo(todo) {\n    this.allItems.splice(this.allItems.indexOf(todo), 1);\n    this.updateStore();\n  }\n  editTodo(todo) {\n    todo.editing = true;\n    this.editingTodoTitle = todo.title;\n  }\n  updateEditingTodo(todo) {\n    //new code start\n    if (this.editingTodoTitle.length === 0) {\n      return this.removeTodo(todo);\n    }\n    //new code end\n    todo.title = this.editingTodoTitle;\n    todo.editing = false;\n    this.editingTodoTitle = '';\n    this.updateStore();\n  }\n  stopEditing(todo) {\n    todo.editing = false;\n  }\n  updateStore() {\n    localStorage.setItem('todoList', JSON.stringify(this.allItems));\n  }\n};\n__decorate([Input()], AppComponent.prototype, \"newTodoText\", void 0);\nAppComponent = __decorate([Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})], AppComponent);","map":{"version":3,"names":["Component","Input","AppComponent","constructor","title","allItems","newTodoText","editingTodoTitle","filter","savedTodos","JSON","parse","localStorage","getItem","map","todo","id","completed","editing","items","item","remaining","length","toggleCompletion","updateStore","toggleAll","forEach","removeCompleted","addTodo","trim","push","Date","now","removeTodo","splice","indexOf","editTodo","updateEditingTodo","stopEditing","setItem","stringify","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\User 62\\Desktop\\Workshop\\OnlineCourses\\codioangularcourse\\proj1\\todomvc\\src\\app\\app.component.ts"],"sourcesContent":["import { Component, Input } from '@angular/core';\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css'],\n})\nexport class AppComponent {\n  title = 'todomvc';\n  allItems: any[] = [];\n\n  //method start\n  constructor() {\n    const savedTodos = JSON.parse(localStorage.getItem('todoList') || '[]');\n    this.allItems = savedTodos.map((todo) => {\n      return {\n        id: todo.id,\n        title: todo.title,\n        completed: todo.completed,\n        editing: todo.editing,\n      };\n    });\n  }\n  //method end\n\n  @Input()\n  newTodoText = '';\n  editingTodoTitle = '';\n  get items() {\n    if (this.filter === 'all') {\n      return this.allItems;\n    }\n    return this.allItems.filter((item) =>\n      this.filter === 'completed' ? item.completed : !item.completed\n    );\n  }\n  get remaining() {\n    return this.allItems.filter((todo) => !todo.completed).length;\n  }\n  filter: 'all' | 'active' | 'completed' = 'all';\n  toggleCompletion(todo) {\n    todo.completed = !todo.completed;\n    this.updateStore();\n  }\n  toggleAll() {\n    this.allItems.forEach((todo) => (todo.completed = !todo.completed));\n    this.updateStore();\n  }\n  get completed() {\n    return this.allItems.filter((todo) => todo.completed);\n  }\n  removeCompleted() {\n    this.allItems = this.allItems.filter((todo) => !todo.completed);\n    this.updateStore();\n  }\n  addTodo() {\n    if (this.newTodoText.trim().length) {\n      this.allItems.push({\n        id: Date.now(),\n        title: this.newTodoText,\n        completed: false,\n        editing: false,\n      });\n      this.newTodoText = '';\n    }\n    this.updateStore();\n  }\n  removeTodo(todo) {\n    this.allItems.splice(this.allItems.indexOf(todo), 1);\n    this.updateStore();\n  }\n\n  editTodo(todo) {\n    todo.editing = true;\n    this.editingTodoTitle = todo.title;\n  }\n\n  updateEditingTodo(todo) {\n    //new code start\n    if (this.editingTodoTitle.length === 0) {\n      return this.removeTodo(todo);\n    }\n    //new code end\n    todo.title = this.editingTodoTitle;\n    todo.editing = false;\n    this.editingTodoTitle = '';\n    this.updateStore();\n  }\n\n  stopEditing(todo) {\n    todo.editing = false;\n  }\n\n  updateStore() {\n    localStorage.setItem('todoList', JSON.stringify(this.allItems));\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}