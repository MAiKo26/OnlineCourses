{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User 62\\\\Desktop\\\\Workshop\\\\first-react-app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport \"./App.css\";\nimport { useState, useEffect, createContext } from \"react\";\nimport { Task } from \"./components/Task\";\nimport Axios from \"axios\";\nimport { BrowserRouter as Router, Routes, Route, Link } from \"react-router-dom\";\nimport { Home } from \"./pages/Home\";\nimport { Menu } from \"./pages/Menu\";\nimport { Contact } from \"./pages/Contact\";\nimport { QueryClient, QueryClientProvider } from \"@tanstack/react-query\";\nimport { Form } from \"./components/Form\";\nimport { useToggle } from \"./components/useToggle\";\n\n// fetch(\"https://catfact.ninja/fact\")\n//   .then((res) => res.json())\n//   .then((data) => {\n//     console.log(data);\n//   });\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AppContext = /*#__PURE__*/createContext();\nfunction App() {\n  _s();\n  const {\n    newNumber\n  } = useCountSetter();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        setCount(count + 1);\n      },\n      children: \"Increase\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        setCount(count - 1);\n      },\n      children: \"Decrease\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        setCount(0);\n      },\n      children: \"Set to zero\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), count]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n  //\n  //\n  //\n  // const [toggle, isVisible] = useToggle(true);\n  // return (\n  //   <div className=\"App\">\n  //     <button onClick={toggle}>{isVisible ? \"Hide\" : \"Show\"}</button>{\" \"}\n  //     {isVisible && <h1> Hidden text</h1>}{\" \"}\n  //   </div>\n  // );\n  // return (\n  //   <div className=\"App\">\n  //     {\" \"}\n  //     <Form></Form>\n  //   </div>\n  // );\n  // const [username, setUsername] = useState(\"Maiko\");\n  // const client = new QueryClient();\n  // return (\n  //   <div className=\"App\">\n  //     <AppContext.Provider value={{ username, setUsername }}>\n  //       <QueryClientProvider client={client}>\n  //         <Router>\n  //           <Link to=\"/\">Home</Link> <Link to=\"/Menu\">Menu</Link>{\" \"}\n  //           <Link to=\"/Contact\">Contact</Link>\n  //           <Routes>\n  //             <Route path=\"/\" element={<Home />} />\n  //             <Route path=\"*\" element={<h1>Page not found</h1>} />\n  //             <Route path=\"/Menu\" element={<Menu />} />\n  //             <Route path=\"/Contact\" element={<Contact />} />\n  //           </Routes>{\" \"}\n  //         </Router>{\" \"}\n  //       </QueryClientProvider>\n  //     </AppContext.Provider>\n  //   </div>\n  // );\n  // const TopComponent = () => {\n  //   const [state, setState] = useState();\n  //   return (\n  //     <div>\n  //       {\" \"}\n  //       <MiddleComponent state={state} />\n  //     </div>\n  //   );\n  // };\n  // const MiddleComponent = (state) => {\n  //   return (\n  //     <div>\n  //       {\" \"}\n  //       <BottomComponent state={state} />\n  //     </div>\n  //   );\n  // };\n  // const BottomComponent = (state) => {\n  //   return <div> {state} </div>;\n  // };\n  // const [excuse, setExcuse] = useState(\"\");\n  // const [excuseResult, setExcuseResult] = useState(\"\");\n  // const fetchData = (excuse) => {\n  //   Axios.get(`https://excuser-three.vercel.app/v1/excuse/${excuse}`).then(\n  //     (res) => {\n  //       console.log(res.data[0].excuse);\n  //       setExcuseResult(res.data[0].excuse);\n  //     }\n  //   );\n  // };\n  // return (\n  //   <div className=\"App\">\n  //     <h1>Generate An Excuse</h1>\n  //     <button onClick={() => fetchData(\"party\")}>Party</button>\n  //     <button onClick={() => fetchData(\"family\")}>Family</button>\n  //     <button onClick={() => fetchData(\"office\")}>Office</button>\n  //     <p>{excuseResult}</p>\n  //   </div>\n  // );\n  // const [name, setName] = useState(\"\");\n  // const [predictedAge, setPredictedAge] = useState(0);\n  // const fetchData = () => {\n  //   Axios.get(`https://api.agify.io/?name=${name}`).then((res) => {\n  //     console.log(res.data);\n  //     setPredictedAge(res.data.age);\n  //   });\n  // };\n  // return (\n  //   <div className=\"App\">\n  //     <input\n  //       placeholder=\"user\"\n  //       onChange={(event) => {\n  //         setName(event.target.value);\n  //       }}\n  //     ></input>{\" \"}\n  //     <button onClick={fetchData}>Predict Age</button>{\" \"}\n  //     <h1>Predicted Age:{predictedAge}</h1>\n  //   </div>\n  // );\n  // const [catFact, setCatFact] = useState(\"\");\n  // const fetchCatFact = () => {\n  //   Axios.get(\"https://catfact.ninja/fact\").then((res) => {\n  //     console.log(res.data);\n  //     setCatFact(res.data.fact);\n  //   });\n  // };\n  // return (\n  //   <div className=\"App\">\n  //     <button onClick={fetchCatFact}> Generate Cat Fact</button>{\" \"}\n  //     <p>{catFact}</p>\n  //   </div>\n  // );\n  // const [todoList, setTodoList] = useState([]);\n  // const [newTask, setNewTask] = useState(\"\");\n  // const deleteTask = (id) => {\n  //   const newTodoList = todoList.filter((task) => {\n  //     return task.id === id ? false : true;\n  //   });\n  //   setTodoList(newTodoList);\n  // };\n  // const greenTask = (id) => {\n  //   const newTodoList = todoList.filter((task) => {\n  //     return task.id === id\n  //       ? (task.color = \"green\")\n  //       : (task.color = task.color);\n  //   });\n  //   setTodoList(newTodoList);\n  // };\n  // return (\n  //   <div className=\"App\">\n  //     <div className=\"addTask\">\n  //       <input\n  //         onChange={(event) => {\n  //           setNewTask(event.target.value);\n  //         }}\n  //       />\n  //       <button\n  //         onClick={() => {\n  //           const task = {\n  //             id:\n  //               todoList.length === 0\n  //                 ? 1\n  //                 : todoList[todoList.length - 1].id + 1,\n  //             taskName: newTask,\n  //             color: \"black\",\n  //           };\n  //           setTodoList([...todoList, task]);\n  //         }}\n  //       >\n  //         Add Task\n  //       </button>\n  //     </div>\n  //     <div className=\"list\">\n  //       {todoList.map((task) => {\n  //         return (\n  //           <Task\n  //             taskName={task.taskName}\n  //             id={task.id}\n  //             deleteTask={deleteTask}\n  //             greenTask={greenTask}\n  //             color={task.color}\n  //           />\n  //         );\n  //       })}\n  //     </div>\n  //   </div>\n  // );\n  // const [count, setCount] = useState(0);\n  // return (\n  //   <div className=\"App\">\n  //     <button\n  //       onClick={() => {\n  //         setCount(count + 1);\n  //       }}\n  //     >\n  //       Increase\n  //     </button>\n  //     <button\n  //       onClick={() => {\n  //         setCount(count - 1);\n  //       }}\n  //     >\n  //       Decrease\n  //     </button>\n  //     <button\n  //       onClick={() => {\n  //         setCount(0);\n  //       }}\n  //     >\n  //       Set to zero\n  //     </button>\n  //     {count}\n  //   </div>\n  // );\n  // const [colorText, setcolorText] = useState(\"\");\n  // return (\n  //   <div>\n  //     <h1>\n  //       <button\n  //         onClick={() => {\n  //           setcolorText(colorText === \"green\" ? \"red\" : \"green\");\n  //         }}\n  //       >\n  //         {\" \"}\n  //         Show/Hide\n  //       </button>{\" \"}\n  //       {<h1 style={{ color: colorText }}>My Name is XD</h1>}\n  //     </h1>\n  //   </div>\n  // );\n  // const [showText, setShowText] = useState(false);\n  // return (\n  //   <div>\n  //     <h1>\n  //       <button\n  //         onClick={() => {\n  //           setShowText(!showText);\n  //         }}\n  //       >\n  //         {\" \"}\n  //         Show/Hide\n  //       </button>{\" \"}\n  //       {showText && <h1>My Name is XD</h1>}\n  //     </h1>\n  //   </div>\n  // );\n  // const [age2, setAge] = useState(1);\n  // const [inputValue, setInputValue] = useState(\"\");\n  // const increaseAge = () => {\n  //   setAge(age2 + 1);\n  // };\n  // const handleInputChange = (event) => {\n  //   console.log(event.target.value);\n  //   setInputValue(event.target.value);\n  // };\n  // return (\n  //   <div>\n  //     {age2} <button onClick={increaseAge}> INCREASE </button>\n  //     <input type=\"text\" onChange={handleInputChange} />\n  //     {inputValue}\n  //   </div>\n  // );\n  // const planets = [\n  //   { name: \"Mars\", isGasPlant: false },\n  //   { name: \"Earth\", isGasPlant: false },\n  //   { name: \"Jupiter\", isGasPlant: true },\n  //   { name: \"Venus\", isGasPlant: false },\n  //   { name: \"Neptune\", isGasPlant: true },\n  //   { name: \"Uranus\", isGasPlant: true },\n  // ];\n  // return (\n  //   <div className=\"App\">\n  //     {planets.map((value, key) => {\n  //       return value.isGasPlant && value.name;\n  //     })}\n  //   </div>\n  // );\n  // const names = [\"Pedro\", \"Jake\", \"Mike\", \"Dustin\", \"Luka\"];\n  // return (\n  //   <div>\n  //     {\" \"}\n  //     <h1>\n  //       {names.map((value, key) => {\n  //         return <h1 key={key}>{value}</h1>;\n  //       })}\n  //     </h1>\n  //   </div>\n  // );\n  // const age = 15;\n  // const isGreen = true;\n  // return (\n  //   <div style={{ color: isGreen ? \"green\" : \"red\" }}>\n  //     {\" \"}\n  //     {age >= 18 ? <h1>over age</h1> : <h1>under age</h1>}{\" \"}\n  //     {isGreen && <button> This is a button</button>}\n  //   </div>\n  // );\n  // return (\n  //   <div className=\"App\">\n  //     <Job salary=\"1\" position=\"senior\" company=\"amazong\" />\n  //     <Job salary=\"2\" position=\"limbo\" company=\"google\"></Job>\n  //     <Job salary=\"3\" position=\"junior\" company=\"facebook\"></Job>\n  //   </div>\n  // );\n}\n\n// const Job = (x) => {\n//   return (\n//     <div>\n//       <h1>{x.salary}</h1>\n//       <h1 className=\"name\">{x.position}</h1>\n//       <h1>{x.company}</h1>\n//     </div>\n//   );\n// };\n\n// const Planets = (x) => {\n//   return (\n//     <div>\n//       <h1>x.name</h1>\n//     </div>\n//   );\n// };\n_s(App, \"dmC/Wfnqn08mZvKPhi+Qws+C0Xw=\", true);\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useEffect","createContext","Task","Axios","BrowserRouter","Router","Routes","Route","Link","Home","Menu","Contact","QueryClient","QueryClientProvider","Form","useToggle","jsxDEV","_jsxDEV","AppContext","App","_s","newNumber","useCountSetter","className","children","onClick","setCount","count","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/User 62/Desktop/Workshop/first-react-app/src/App.js"],"sourcesContent":["import \"./App.css\";\nimport { useState, useEffect, createContext } from \"react\";\nimport { Task } from \"./components/Task\";\nimport Axios from \"axios\";\nimport { BrowserRouter as Router, Routes, Route, Link } from \"react-router-dom\";\nimport { Home } from \"./pages/Home\";\nimport { Menu } from \"./pages/Menu\";\nimport { Contact } from \"./pages/Contact\";\nimport { QueryClient, QueryClientProvider } from \"@tanstack/react-query\";\nimport { Form } from \"./components/Form\";\nimport { useToggle } from \"./components/useToggle\";\n\n// fetch(\"https://catfact.ninja/fact\")\n//   .then((res) => res.json())\n//   .then((data) => {\n//     console.log(data);\n//   });\n\nexport const AppContext = createContext();\n\nfunction App() {\n  const { newNumber } = useCountSetter();\n  return (\n    <div className=\"App\">\n      <button\n        onClick={() => {\n          setCount(count + 1);\n        }}\n      >\n        Increase\n      </button>\n      <button\n        onClick={() => {\n          setCount(count - 1);\n        }}\n      >\n        Decrease\n      </button>\n      <button\n        onClick={() => {\n          setCount(0);\n        }}\n      >\n        Set to zero\n      </button>\n      {count}\n    </div>\n  );\n  //\n  //\n  //\n  // const [toggle, isVisible] = useToggle(true);\n  // return (\n  //   <div className=\"App\">\n  //     <button onClick={toggle}>{isVisible ? \"Hide\" : \"Show\"}</button>{\" \"}\n  //     {isVisible && <h1> Hidden text</h1>}{\" \"}\n  //   </div>\n  // );\n  // return (\n  //   <div className=\"App\">\n  //     {\" \"}\n  //     <Form></Form>\n  //   </div>\n  // );\n  // const [username, setUsername] = useState(\"Maiko\");\n  // const client = new QueryClient();\n  // return (\n  //   <div className=\"App\">\n  //     <AppContext.Provider value={{ username, setUsername }}>\n  //       <QueryClientProvider client={client}>\n  //         <Router>\n  //           <Link to=\"/\">Home</Link> <Link to=\"/Menu\">Menu</Link>{\" \"}\n  //           <Link to=\"/Contact\">Contact</Link>\n  //           <Routes>\n  //             <Route path=\"/\" element={<Home />} />\n  //             <Route path=\"*\" element={<h1>Page not found</h1>} />\n  //             <Route path=\"/Menu\" element={<Menu />} />\n  //             <Route path=\"/Contact\" element={<Contact />} />\n  //           </Routes>{\" \"}\n  //         </Router>{\" \"}\n  //       </QueryClientProvider>\n  //     </AppContext.Provider>\n  //   </div>\n  // );\n  // const TopComponent = () => {\n  //   const [state, setState] = useState();\n  //   return (\n  //     <div>\n  //       {\" \"}\n  //       <MiddleComponent state={state} />\n  //     </div>\n  //   );\n  // };\n  // const MiddleComponent = (state) => {\n  //   return (\n  //     <div>\n  //       {\" \"}\n  //       <BottomComponent state={state} />\n  //     </div>\n  //   );\n  // };\n  // const BottomComponent = (state) => {\n  //   return <div> {state} </div>;\n  // };\n  // const [excuse, setExcuse] = useState(\"\");\n  // const [excuseResult, setExcuseResult] = useState(\"\");\n  // const fetchData = (excuse) => {\n  //   Axios.get(`https://excuser-three.vercel.app/v1/excuse/${excuse}`).then(\n  //     (res) => {\n  //       console.log(res.data[0].excuse);\n  //       setExcuseResult(res.data[0].excuse);\n  //     }\n  //   );\n  // };\n  // return (\n  //   <div className=\"App\">\n  //     <h1>Generate An Excuse</h1>\n  //     <button onClick={() => fetchData(\"party\")}>Party</button>\n  //     <button onClick={() => fetchData(\"family\")}>Family</button>\n  //     <button onClick={() => fetchData(\"office\")}>Office</button>\n  //     <p>{excuseResult}</p>\n  //   </div>\n  // );\n  // const [name, setName] = useState(\"\");\n  // const [predictedAge, setPredictedAge] = useState(0);\n  // const fetchData = () => {\n  //   Axios.get(`https://api.agify.io/?name=${name}`).then((res) => {\n  //     console.log(res.data);\n  //     setPredictedAge(res.data.age);\n  //   });\n  // };\n  // return (\n  //   <div className=\"App\">\n  //     <input\n  //       placeholder=\"user\"\n  //       onChange={(event) => {\n  //         setName(event.target.value);\n  //       }}\n  //     ></input>{\" \"}\n  //     <button onClick={fetchData}>Predict Age</button>{\" \"}\n  //     <h1>Predicted Age:{predictedAge}</h1>\n  //   </div>\n  // );\n  // const [catFact, setCatFact] = useState(\"\");\n  // const fetchCatFact = () => {\n  //   Axios.get(\"https://catfact.ninja/fact\").then((res) => {\n  //     console.log(res.data);\n  //     setCatFact(res.data.fact);\n  //   });\n  // };\n  // return (\n  //   <div className=\"App\">\n  //     <button onClick={fetchCatFact}> Generate Cat Fact</button>{\" \"}\n  //     <p>{catFact}</p>\n  //   </div>\n  // );\n  // const [todoList, setTodoList] = useState([]);\n  // const [newTask, setNewTask] = useState(\"\");\n  // const deleteTask = (id) => {\n  //   const newTodoList = todoList.filter((task) => {\n  //     return task.id === id ? false : true;\n  //   });\n  //   setTodoList(newTodoList);\n  // };\n  // const greenTask = (id) => {\n  //   const newTodoList = todoList.filter((task) => {\n  //     return task.id === id\n  //       ? (task.color = \"green\")\n  //       : (task.color = task.color);\n  //   });\n  //   setTodoList(newTodoList);\n  // };\n  // return (\n  //   <div className=\"App\">\n  //     <div className=\"addTask\">\n  //       <input\n  //         onChange={(event) => {\n  //           setNewTask(event.target.value);\n  //         }}\n  //       />\n  //       <button\n  //         onClick={() => {\n  //           const task = {\n  //             id:\n  //               todoList.length === 0\n  //                 ? 1\n  //                 : todoList[todoList.length - 1].id + 1,\n  //             taskName: newTask,\n  //             color: \"black\",\n  //           };\n  //           setTodoList([...todoList, task]);\n  //         }}\n  //       >\n  //         Add Task\n  //       </button>\n  //     </div>\n  //     <div className=\"list\">\n  //       {todoList.map((task) => {\n  //         return (\n  //           <Task\n  //             taskName={task.taskName}\n  //             id={task.id}\n  //             deleteTask={deleteTask}\n  //             greenTask={greenTask}\n  //             color={task.color}\n  //           />\n  //         );\n  //       })}\n  //     </div>\n  //   </div>\n  // );\n  // const [count, setCount] = useState(0);\n  // return (\n  //   <div className=\"App\">\n  //     <button\n  //       onClick={() => {\n  //         setCount(count + 1);\n  //       }}\n  //     >\n  //       Increase\n  //     </button>\n  //     <button\n  //       onClick={() => {\n  //         setCount(count - 1);\n  //       }}\n  //     >\n  //       Decrease\n  //     </button>\n  //     <button\n  //       onClick={() => {\n  //         setCount(0);\n  //       }}\n  //     >\n  //       Set to zero\n  //     </button>\n  //     {count}\n  //   </div>\n  // );\n  // const [colorText, setcolorText] = useState(\"\");\n  // return (\n  //   <div>\n  //     <h1>\n  //       <button\n  //         onClick={() => {\n  //           setcolorText(colorText === \"green\" ? \"red\" : \"green\");\n  //         }}\n  //       >\n  //         {\" \"}\n  //         Show/Hide\n  //       </button>{\" \"}\n  //       {<h1 style={{ color: colorText }}>My Name is XD</h1>}\n  //     </h1>\n  //   </div>\n  // );\n  // const [showText, setShowText] = useState(false);\n  // return (\n  //   <div>\n  //     <h1>\n  //       <button\n  //         onClick={() => {\n  //           setShowText(!showText);\n  //         }}\n  //       >\n  //         {\" \"}\n  //         Show/Hide\n  //       </button>{\" \"}\n  //       {showText && <h1>My Name is XD</h1>}\n  //     </h1>\n  //   </div>\n  // );\n  // const [age2, setAge] = useState(1);\n  // const [inputValue, setInputValue] = useState(\"\");\n  // const increaseAge = () => {\n  //   setAge(age2 + 1);\n  // };\n  // const handleInputChange = (event) => {\n  //   console.log(event.target.value);\n  //   setInputValue(event.target.value);\n  // };\n  // return (\n  //   <div>\n  //     {age2} <button onClick={increaseAge}> INCREASE </button>\n  //     <input type=\"text\" onChange={handleInputChange} />\n  //     {inputValue}\n  //   </div>\n  // );\n  // const planets = [\n  //   { name: \"Mars\", isGasPlant: false },\n  //   { name: \"Earth\", isGasPlant: false },\n  //   { name: \"Jupiter\", isGasPlant: true },\n  //   { name: \"Venus\", isGasPlant: false },\n  //   { name: \"Neptune\", isGasPlant: true },\n  //   { name: \"Uranus\", isGasPlant: true },\n  // ];\n  // return (\n  //   <div className=\"App\">\n  //     {planets.map((value, key) => {\n  //       return value.isGasPlant && value.name;\n  //     })}\n  //   </div>\n  // );\n  // const names = [\"Pedro\", \"Jake\", \"Mike\", \"Dustin\", \"Luka\"];\n  // return (\n  //   <div>\n  //     {\" \"}\n  //     <h1>\n  //       {names.map((value, key) => {\n  //         return <h1 key={key}>{value}</h1>;\n  //       })}\n  //     </h1>\n  //   </div>\n  // );\n  // const age = 15;\n  // const isGreen = true;\n  // return (\n  //   <div style={{ color: isGreen ? \"green\" : \"red\" }}>\n  //     {\" \"}\n  //     {age >= 18 ? <h1>over age</h1> : <h1>under age</h1>}{\" \"}\n  //     {isGreen && <button> This is a button</button>}\n  //   </div>\n  // );\n  // return (\n  //   <div className=\"App\">\n  //     <Job salary=\"1\" position=\"senior\" company=\"amazong\" />\n  //     <Job salary=\"2\" position=\"limbo\" company=\"google\"></Job>\n  //     <Job salary=\"3\" position=\"junior\" company=\"facebook\"></Job>\n  //   </div>\n  // );\n}\n\n// const Job = (x) => {\n//   return (\n//     <div>\n//       <h1>{x.salary}</h1>\n//       <h1 className=\"name\">{x.position}</h1>\n//       <h1>{x.company}</h1>\n//     </div>\n//   );\n// };\n\n// const Planets = (x) => {\n//   return (\n//     <div>\n//       <h1>x.name</h1>\n//     </div>\n//   );\n// };\n\nexport default App;\n"],"mappings":";;AAAA,OAAO,WAAW;AAClB,SAASA,QAAQ,EAAEC,SAAS,EAAEC,aAAa,QAAQ,OAAO;AAC1D,SAASC,IAAI,QAAQ,mBAAmB;AACxC,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,aAAa,IAAIC,MAAM,EAAEC,MAAM,EAAEC,KAAK,EAAEC,IAAI,QAAQ,kBAAkB;AAC/E,SAASC,IAAI,QAAQ,cAAc;AACnC,SAASC,IAAI,QAAQ,cAAc;AACnC,SAASC,OAAO,QAAQ,iBAAiB;AACzC,SAASC,WAAW,EAAEC,mBAAmB,QAAQ,uBAAuB;AACxE,SAASC,IAAI,QAAQ,mBAAmB;AACxC,SAASC,SAAS,QAAQ,wBAAwB;;AAElD;AACA;AACA;AACA;AACA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEA,OAAO,MAAMC,UAAU,gBAAGjB,aAAa,CAAC,CAAC;AAEzC,SAASkB,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM;IAAEC;EAAU,CAAC,GAAGC,cAAc,CAAC,CAAC;EACtC,oBACEL,OAAA;IAAKM,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClBP,OAAA;MACEQ,OAAO,EAAEA,CAAA,KAAM;QACbC,QAAQ,CAACC,KAAK,GAAG,CAAC,CAAC;MACrB,CAAE;MAAAH,QAAA,EACH;IAED;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACTd,OAAA;MACEQ,OAAO,EAAEA,CAAA,KAAM;QACbC,QAAQ,CAACC,KAAK,GAAG,CAAC,CAAC;MACrB,CAAE;MAAAH,QAAA,EACH;IAED;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACTd,OAAA;MACEQ,OAAO,EAAEA,CAAA,KAAM;QACbC,QAAQ,CAAC,CAAC,CAAC;MACb,CAAE;MAAAF,QAAA,EACH;IAED;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EACRJ,KAAK;EAAA;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;EAER;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AACF;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAAX,EAAA,CAtUSD,GAAG;AAAAa,EAAA,GAAHb,GAAG;AAwUZ,eAAeA,GAAG;AAAC,IAAAa,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}